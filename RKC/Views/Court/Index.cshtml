@model DB.Model.Court.CourtGeneralInformation
@{
    ViewBag.Title = "Index";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<script src="~/Scripts/jquery.maskedinput.min.js"></script>


<script>
    function callErrorShowConfirm(message) {
        $.confirm({
            title: 'Исправьте ошибки прежде чем сохранить !!!',
            content: '' +
                '<form action="" class="formName">' +
                '<div class="form-group">' +
                '<label>' + message + '</label>' +
                '</div>' +
                '</form>',
            buttons: {
                "Хорошо!": function () {
                }
            }
        });
    }
    function callError(object) {
        object.addClass("Required");
    }
    function removeError(object) {
        object.removeClass("Required");
    }
    function callErrorText(object,message) {
        object.addClass("Required");
        object.before(`<p class='callErrorText' style='color:red' >` + message +`</p>`);
    }
    function removeErrorText(object) {
        $(".callErrorText").remove();
        object.removeClass("Required");
    }
    function UpdateCourtWordRequisites() {
        $("#PartialViewCourtWorkRequisites").empty();
        $.ajax({
            url: '/Court/PartialViewCourtWorkRequisites?Id=' + @Model.Id,
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#PartialViewCourtWorkRequisites").append(data);
            },
            error: function () {
                alert("Что то пошло не так. Обратитесь к администратору");
            }
        });
    }
    function UpdateLitigationWorkRequisites() {
        $("#PartialViewLitigationWorkRequisites").empty();
        $.ajax({
            url: '/Court/PartialViewLitigationWorkRequisites?Id=' + @Model.Id,
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#PartialViewLitigationWorkRequisites").append(data);
            },
            error: function () {
                alert("Что то пошло не так. Обратитесь к администратору");
            }
        });
    }
    function UpdateInstallmentPayRequisites() {
        $("#PartialInstallmentPayRequisites").empty();
        $.ajax({
            url: '/Court/PartialViewInstallmentPayRequisites?Id=' + @Model.Id,
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#PartialInstallmentPayRequisites").append(data);
            },
            error: function () {
                alert("Что то пошло не так. Обратитесь к администратору");
            }
        });
        function CheckRequeredError() {
            var elements = document.getElementsByClassName("Required");
            if (elements.length !== 0) {
                $("#Save").removeClass("hidden");
                $("#Save").addClass("hidden");
            }
        }
    }
</script>
<style>
    .container {
        width: 95% !important;
    }

    textarea {
        width: 300px !important;
        height: 150px !important;
    }
    .containerHr {
        display: flex;
        align-items: center;
    }

    .hrHr {
        width: 33%;
        height: 0;
    }

    .textHr {
        width: 33%;
        background: pink;
        padding: 1em;
        text-align: center;
        margin: 1em;
    }
</style>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<div class="loader">
    <div class="inner one"></div>
    <div class="inner two"></div>
    <div class="inner three"></div>
</div>

<div class="col-md-1">
    <div id="mySidenav" class="sidenav">
        <ul class="nav nav-tabs">
            @*<li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#GeneralInformation">Главная</a>
        </li>*@
            <li class="nav-item active" id="GeneralInformationButton">
                <a class="nav-link" data-toggle="tab" href="#GeneralInformation">Общая информация</a>
            </li>
            <li class="nav-item" id="CourtWorkButton">
                <a class="nav-link" data-toggle="tab" data-bs-target="#profile" href="#CourtWork">Судебная работа</a>
            </li>
            <li class="nav-item" id="ExecutionInPFButton">
                <a class="nav-link" data-toggle="tab" href="#ExecutionInPF">Исполнение в ПФ</a>
            </li>
            <li class="nav-item" id="ExecutionFSSPButton">
                <a class="nav-link" data-toggle="tab" href="#ExecutionFSSP">Исполнение в ФССП</a>
            </li>
            <li class="nav-item" id="LitigationWorkButton">
                <a class="nav-link" data-toggle="tab" href="#LitigationWork">Исковая работа</a>
            </li>
            <li class="nav-item" id="InstallmentPlanButton">
                <a class="nav-link" data-toggle="tab" href="#InstallmentPlan">Рассрочка</a>
            </li>
            <li class="nav-item" id="BankruptcyButton">
                <a class="nav-link" data-toggle="tab" href="#Bankruptcy">Банкротство</a>
            </li>
            <li class="nav-item" id="WriteOffButton">
                <a class="nav-link" data-toggle="tab" href="#WriteOff">Списание</a>
            </li>
            <li class="nav-item" id="StateDutyButton">
                <a class="nav-link" data-toggle="tab" href="#StateDuty">Госпошлина</a>
            </li>
            <li class="nav-item" id="DocumentScansButton">
                <a class="nav-link" data-toggle="tab" href="#DocumentScans">Сканы документов</a>
            </li>
            <li class="nav-item" id="CourtNoteButton">
                <a class="nav-link" data-toggle="tab" href="#CourtNote">Примечание</a>
            </li>
            <li class="nav-item" id="UserHistoryActionButton">
                <a class="nav-link" data-toggle="tab" href="#UserHistoryAction">История действий пользователя</a>
            </li>
        </ul>
    </div>
</div>
<div class="col-md-11">
    <div class="col-md-2 text-left">
        @{
            var NumberSP = $"П-{Model.Id}";
        }
        <h4 class="">№ @NumberSP </h4>
    </div>
    <div class="col-md-4 text-left">
        <h4 class="">@Model.LastName @Model.FirstName @Model.Surname СП № @Model.CourtWork.NumberSP </h4>

    </div>
    <div class="col-md-6 text-left">
        <h4 class="">Адрес: ул.@Model.Street, д.@Model.Home кв.@Model.Flat</h4>
    </div>

    <div id="ResultSearchCourt"></div>
    @using (Html.BeginForm("SaveCourt", "Court", FormMethod.Post,
    new { onsubmit = "this.querySelectorAll('input').forEach(i => i.disabled = false);this.querySelectorAll('textarea').forEach(i => i.disabled = false)" }))
    {
        if (!ViewBag.IsLock)
        {
            <input type="submit" class="btn hidden btn-success" id="Save" value="Coхранить" />
            <input type="button" class="btn btn-success" id="EditData" value="Редактировать" />
            <input type="button" class="btn hidden btn-danger" id="Cancel" value="Отмена" />
            <input type="button" class="btn btn-danger" id="ClosePage" value="Закрыть страницу" />
        }
        else
        {
            <input type="button" class="btn btn-danger" id="ClosePage" value="Закрыть страницу" />
            <p>В данный момент страницу редактирует @ViewBag.User</p>
        }
        <span style="font-size:18px">Статус карточки:</span> @Html.TextBoxFor(m => m.StatusCard, new { @readonly = "readonly", @dicId = "23", @class = "form-control DictionaryAutoComplete", @style = "width: 110px !important;", @Value = Model.StatusCard })
        if (Model.Lic?.StartsWith("7") == true)
        {
            <span style="font-size:18px">Текущая ДЗ:</span> @Html.TextBoxFor(m => m.CourtWork.SumDebtNowDate, new { @readonly = "readonly", disabled = "disabled", @type = "number", @step = "0.01", @class = "form-control", @style = "width: 140px !important;", @Value = Model.CourtWork.SumDebtNowDate })
        }
        else
        {
            <span style="font-size:18px">Текущая ДЗ:</span> @Html.TextBoxFor(m => m.CourtWork.SumDebtNowDate, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @style = "width: 140px !important;", @Value = Model.CourtWork.SumDebtNowDate })
        }
        <span style="font-size:18px">ЛС:</span> @Html.TextBoxFor(m => m.Lic, new { @readonly = "readonly", @disabled = "disabled", @type = "number", @step = "0.01", @class = "form-control", @style = "width: 140px !important;", @Value = Model.Lic })
        <div class="row">
            
            <div class="col-md-12 text-center">
                <div class="containerHr">
                    <hr class="hrHr" />
                    <label data-toggle="collapse" style="cursor:pointer" data-target="#detailInfo">Детальня информация &darr;</label>
                    <hr class="hrHr" />
                </div>
                <div id="detailInfo" class="collapse">
                    <div class="col-md-2">
                        <span style="font-size:18px">Дата отмены СП:</span>
                        <input readonly="readonly" class="form-control" disabled="disabled" value="@(Model.CourtLitigationWork.DateDecisionCansel.HasValue ? Model.CourtLitigationWork.DateDecisionCansel.Value.ToString("dd-MM-yyyy") : string.Empty)" />
                    </div>
                    <div class="col-md-2">
                        <span style="font-size:18px">Иск в суде:</span>
                        <input readonly="readonly" class="form-control" disabled="disabled" value="@(Model.CourtLitigationWork.DateSubmission.HasValue ? Model.CourtLitigationWork.DateSubmission.Value.ToString("dd-MM-yyyy") : string.Empty)" />
                    </div>
                    <div class="col-md-2">
                        <span style="font-size:18px">Рассрочка от:</span>
                        <input readonly="readonly" class="form-control" disabled="disabled" value="@(Model.CourtInstallmentPlan.DateAcceptanceApplicationRestructuring.HasValue ? Model.CourtInstallmentPlan.DateAcceptanceApplicationRestructuring.Value.ToString("dd-MM-yyyy") : string.Empty)" />
                    </div>
                    <div class="col-md-2">
                        <span style="font-size:18px">Банкрот:</span>
                        <input readonly="readonly" class="form-control" disabled="disabled" value="@(Model.CourtBankruptcy.BankruptcyCaseNumber)" />
                    </div>
                    <div class="col-md-2">
                        <span style="font-size:18px">Банкрот:</span>
                        <input readonly="readonly" class="form-control" disabled="disabled" value="@(Model.CourtWriteOff.WriteOffStatus)" />
                    </div>
                </div>
            </div>
        </div>
        
        
        <div class="tab-content">
            <div class="tab-pane fade active in" id="GeneralInformation">
                @Html.Partial("PartialGeneralInformation", Model)
            </div>
            <div class="tab-pane fade" id="CourtWork">
                @Html.Partial("PartialCourtWork", Model)
            </div>
            <div class="tab-pane fade" id="ExecutionInPF">
                @Html.Partial("PartialExecutionInPF", Model)
            </div>
            <div class="tab-pane fade" id="ExecutionFSSP">
                @Html.Partial("PartialExecutionFSSP", Model)
            </div>
            <div class="tab-pane fade" id="LitigationWork">
                @Html.Partial("PartialLitigationWork", Model)
            </div>
            <div class="tab-pane fade" id="InstallmentPlan">
                @Html.Partial("PartialInstallmentPlan", Model)
            </div>
            <div class="tab-pane fade" id="Bankruptcy">
                @Html.Partial("PartialBankruptcy", Model)
            </div>
            <div class="tab-pane fade" id="WriteOff">
                @Html.Partial("PartialWriteOff", Model)
            </div>
            <div class="tab-pane fade" id="StateDuty">
                @Html.Partial("PartialStateDuty", Model)
            </div>
            <div class="tab-pane fade" id="DocumentScans">
                @Html.Partial("PartialDocumentScans", Model)
            </div>
            <div class="tab-pane fade" id="CourtNote">
                @Html.Partial("PartialCourtNote", Model)
            </div>
            <div class="tab-pane fade" id="UserHistoryAction">
                <div id="UserHistoryActionResult"></div>
            </div>
        </div>

    }
</div>

<script>
    $(document).ready(function (e) {
        $("#PasportNumber").mask("99999?9");
        $("#Snils").mask("999-999-999-9?9");
        $("#PasportSeria").mask("9999");
        $("#Snils").mask("999-999-999-9?9");
        $("#Inn").mask("99999999999?9");
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
        $("#ShareOfOwnership").on('click keyup change focus focusout ', function (e) {
            var value = $("#ShareOfOwnership").val();
            $("#ShareInRight").attr("disabled", true);
            $("#InSolidarityWith").attr("disabled", true);
            if (value == 'долевая (доля на 1 чел)') {
                $("#ShareInRight").attr("disabled", false);
                return;
            }
            if (value == 'общая долевая (доля на неск-ко человек)' || value == 'общая совместная (вся кв. на неск-ко чел)' ) {
                $("#InSolidarityWith").attr("disabled", false);
                $("#ShareInRight").attr("disabled", false);
                return;
            }
            if (value == 'муниципальная') {
                $("#InSolidarityWith").attr("disabled", false);
                $("#ShareInRight").attr("disabled", true);
                return;
            }
        })

        $("#UserHistoryActionButton").click(function () {
            $.ajax({
                url: "/Court/GetActionUser?Lic=" + @Model.Lic + '&IdCourt=' + @Model.Id,
                success: function (data) {
                    $("#UserHistoryActionResult").empty();
                    $("#UserHistoryActionResult").append('<h4 style= "white-space: break-spaces;">' + data + '</h4>');
                },
                Error: function (e) {
                    alert("Ошибка. Обратитесь к администратору")
                }
            });
        })
        $("input").on('click keyup change focus focusout', function (e) {
            let equalDate = @DateTimeOffset.Now.ToUnixTimeSeconds();
            let equalDatePlus1Motn = @DateTimeOffset.Now.AddMonths(1).ToUnixTimeSeconds();
            console.log($(this).attr('NotMaxDAte'))
            if (($(this).attr('type').toLowerCase() == "date" || $(this).attr('type').toLowerCase() == "month") && $(this).attr('NotMaxDAte') != "true") {
                if (Date.parse($(this).val())) {
                    $("#Save").removeClass("hidden");
                    removeErrorText($(this));
                    removeError($(this));
                    removeError($(this));
                    if ((Date.parse($(this).val()) * 0.001) > equalDate) {
                        $("#Save").addClass("hidden");
                        callErrorText($(this), "Максимальная дата @DateTime.Now.Date.ToString("dd.MM.yyyy")");
                        callError($(this));
                        callError($(this))
                    }
                }
            }
            if (($(this).attr('type').toLowerCase() == "date" || $(this).attr('type').toLowerCase() == "month") && ($(this).attr('NotMaxDAte') == "true" && $(this).attr('MaxDAtePlus1Month') == "true" )) {
            if (Date.parse($(this).val())) {
                $("#Save").removeClass("hidden");
                removeErrorText($(this));
                removeError($(this));
                removeError($(this));
                if ((Date.parse($(this).val()) * 0.001) > equalDatePlus1Motn) {
                    $("#Save").addClass("hidden");
                    callErrorText($(this), "Максимальная дата @DateTime.Now.Date.AddMonths(1).ToString("dd.MM.yyyy")");
                    callError($(this));
                    callError($(this))
                }
            }
        }

        })

        ///Clear
        $(".nav-tabs li").each(function () {
            $(this).removeClass("active");
        });
        $(".tab-content div").each(function () {
            $(this).removeClass("active in");
        });
        $('a[data-toggle="tab"]').on('click', function (e) {
            console.log($(e.target).attr('href'));
            var attr = $(e.target).attr('href');
            if (attr == "#General" || attr == "#OwnerInformation") {

            } else {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            }
        });

        var activeTab = localStorage.getItem('activeTab');
        if (activeTab) {
            $(".nav-tabs li").each(function () {
                $(this).removeClass("active");
            });
            $(".tab-content div").each(function () {
                $(this).removeClass("active in");
            });
            $(activeTab + 'Button').addClass("active");
            $(activeTab).addClass("active in");
            if (activeTab == '#UserHistoryAction') {
                $("#UserHistoryActionButton").click();
            }
            if (activeTab == '#CourtNote') {
                $("#CourtNoteButton").click();
            }
            $("#GeneralButton").click();
        } else {
            $("#GeneralInformationButton").addClass("active");
            $("#GeneralInformation").addClass("active in");

        }
        $("#GeneralButton").addClass("active");
        $("#General").addClass("active in");

        $("#EditData").click(function (e) {
            $("#Save").removeClass("hidden");
            $("#Cancel").removeClass("hidden");
            $("#EditData").addClass("hidden");
            $("#AddCourtWorkRequisites").removeClass("hidden");
            $("#AddInstallmentPayRequisites").removeClass("hidden");
            $("#AddLitigationWorkRequisites").removeClass("hidden");
            $("#CourtOwnerInformation_OwnerTypeDocuments").prop('disabled', false);;
            $('div input').each(function () {
                $(this).prop('readonly', false);;
            });
            $('.removeCourtWorkRequisites').each(function () {
                $(this).removeClass("hidden");
            });
            $('.removeInstallmentPayRequisites').each(function () {
                $(this).removeClass("hidden");
            });
            $('.removeLitigationWorkRequisites').each(function () {
                $(this).removeClass("hidden");
            });
            $('div textarea').each(function () {
                $(this).prop('readonly', false);;
            });
        })
        $("#ClosePage").click(function (e) {
            var Page = "CourtControllerIndex" + @Model.Id;
            $.ajax({
                url: '/Court/clearCache?Page=' + Page,
                type: 'Get',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    window.close();
                },
                error: function () {
                    alert("Что то пошло не так. Обратитесь к администратору");
                }
            });
        })
        $("#Cancel").click(function (e) {
            $("#Save").addClass("hidden");
            $("#Cancel").addClass("hidden");
            $("#EditData").removeClass("hidden");
            window.location.reload();
            $('div input').each(function () {
                $(this).prop('readonly', true);;
            });
            $('div textarea').each(function () {
                $(this).prop('readonly', true);;
            });
        })
        $(".loader").addClass("hidden");

        var selectDic = true;
        var val = '';
        var atr = '';

        $('.DictionaryAutoCompleteNotRequired').keyup(function () {
            val = $(this).val();
            atr = $(this).attr("dicId");
            console.log(selectDic);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + val + '&id=' + atr, type: "Get", dataType: "json",
                    data: { id: request.term },
                    success: function (data) {
                        if (data.length > 0) {
                            response($.map(data, function (item) {
                                return { label: item, value: item };
                            }));
                        }
                    },
                });
            },
            minLength: 0,
        }).focus(function () {
            val = $(this).val();
            atr = $(this).attr("dicId");
            $(this).autocomplete("search");
        })
        $('.DictionaryAutoComplete').keyup(function () {
            val = $(this).val();
            atr = $(this).attr("dicId");
            console.log(selectDic);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + val + '&id=' + atr, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (val == data[0]) {
                                selectDic = false;
                                return { label: data[0], value: data[0] };
                            }
                        }
                        if (data.length > 0) {
                            response($.map(data, function (item) {
                                selectDic = true;
                                return { label: item, value: item };
                            }));
                        } else {
                            selectDic = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                selectDic = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                val = $(this).val();
                atr = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDic == true) {
                    $(this).val("");
                    selectDic = false;
                }
            }
        })
    })
</script>

<script src="~/Scripts/multiselect-dropdown.js"></script>