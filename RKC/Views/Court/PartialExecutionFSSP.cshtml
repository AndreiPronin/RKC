@model DB.Model.Court.CourtGeneralInformation
<div class="col-md-4">
    <h2 class="">Исполнение в ФССП</h2>
</div>
<div class="col-md-4">
    <h2 class="">Первичная подача</h2>
</div>
<div class="col-md-4">
    <h2 class="">Повторная подача</h2>
</div>
<div class="row">
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">ФИО сотрудника (направившего СП в ИО):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.FioSendSpIo, new { @readonly = "readonly", @dicId = "20", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.FioSendSpIo })
        </div>
        <label class="col-sm-12 col-form-label">Дата задания:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateTask, new
            {
                @type = "month",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateTask.HasValue ? Model.CourtExecutionFSSP.DateTask.Value.ToString("yyyy-MM") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Исполнительный орган (ФССП):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ExecutiveBody, new { @readonly = "readonly", @dicId = "3", @class = "form-control DictionaryAutoCompleteFSSP", @Value = Model.CourtExecutionFSSP.ExecutiveBody })
        </div>
        <label class="col-sm-12 col-form-label">Адрес ИО</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtExecutionFSSP.AddressIO, new { @style = "width: 300px !important; height: 50px !important;", @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.AddressIO })
        </div>
        <label class="col-sm-12 col-form-label">Дата отправки заявления в ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateSendingApplicationFSSP, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateSendingApplicationFSSP.HasValue ? Model.CourtExecutionFSSP.DateSendingApplicationFSSP.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Способ отправки заявления в ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SendApplicationFSSP, new { @readonly = "readonly", @dicId = "17", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.SendApplicationFSSP })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ФССП - всего:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumApplicationAll, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumApplicationAll })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ФССП - ОД:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumApplicationOd, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumApplicationOd })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ФССП - пени:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumApplicationPeny, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumApplicationPeny })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ФССП - ГП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumApplicationGp, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumApplicationGp })
        </div>
        <div class="col-sm-12" style="margin-top:12px">
            <div class="col-md-6">
                <button type="button" class="btn-primary">Вывести отчет по оплатам от ФССП</button>
            </div>
            <div class="col-md-6">
                <button type="button" class="btn-primary">Сформировать заявление о направлении ИД в ФССП</button>
            </div>
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты всего от ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumPaymentAllFSSP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumPaymentAllFSSP })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты ОД от ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumPaymentODFSSP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumPaymentODFSSP })
        </div>

        <label class="col-sm-12 col-form-label">Сумма оплаты пени от ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumPaymentPenyFSSP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumPaymentPenyFSSP })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты ГП от ФССП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumPaymentGpFSSP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumPaymentGpFSSP })
        </div>
    </div>
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Номер ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.NumberIP, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.NumberIP })
        </div>
        <label class="col-sm-12 col-form-label">Дата возбуждения ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPInitiationDate, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPInitiationDate.HasValue ? Model.CourtExecutionFSSP.IPInitiationDate.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Сумма в постановлении о возбуждении ИП - всего:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumDecisionInitateIP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumDecisionInitateIP })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата окончания ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPEndDate, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPEndDate.HasValue ? Model.CourtExecutionFSSP.IPEndDate.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Основание окончания ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.GroundsEndingIP, new { @readonly = "readonly", @dicId = "4", @class = "form-control DictionaryAutoCompleteGroundsEndingIP", @Value = Model.CourtExecutionFSSP.GroundsEndingIP })
        </div>
        <label class="col-sm-12 col-form-label">Статья окончания ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SatyaEndingIP, new { @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.SatyaEndingIP })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата отзыва ИД с исполнения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPExecutionDate, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPExecutionDate.HasValue ? Model.CourtExecutionFSSP.IPExecutionDate.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Причина отзыва ИД с исполнения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ReasonExecutionIP, new { @readonly = "readonly", @dicId = "5", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ReasonExecutionIP })
        </div>
        <label class="col-sm-12 col-form-label">Дата поступления оригиналов ИД при окончании ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateReceiptOriginalIDEndIP, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateReceiptOriginalIDEndIP.HasValue ? Model.CourtExecutionFSSP.DateReceiptOriginalIDEndIP.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата отказа в возбуждении ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateRefusalInitiateIP, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateRefusalInitiateIP.HasValue ? Model.CourtExecutionFSSP.DateRefusalInitiateIP.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Основание отказа в возбуждении ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.GroundsRefusalInitiateIP, new { @readonly = "readonly", @dicId = "6", @class = "form-control DictionaryAutoCompleteGroundsRefusalInitiateIP", @Value = Model.CourtExecutionFSSP.GroundsRefusalInitiateIP })
        </div>
        <label class="col-sm-12 col-form-label">Статья отказа ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SatayGroundsRefusalInitiateIP, new { @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.SatayGroundsRefusalInitiateIP })
        </div>
        <label class="col-sm-12 col-form-label">Дата поступления оригинала ИД при отказе в возбуждении ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP.HasValue ? Model.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
    </div>
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Номер ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.NumberIP2, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.NumberIP2 })
        </div>
        <label class="col-sm-12 col-form-label">Дата возбуждения ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPInitiationDate2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPInitiationDate2.HasValue ? Model.CourtExecutionFSSP.IPInitiationDate2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Сумма в постановлении о возбуждении ИП - всего 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SumDecisionInitateIP2, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionFSSP.SumDecisionInitateIP2 })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата окончания ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPEndDate2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPEndDate2.HasValue ? Model.CourtExecutionFSSP.IPEndDate2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Основание окончания ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.GroundsEndingIP2, new { @readonly = "readonly", @dicId = "4", @class = "form-control DictionaryAutoCompleteGroundsEndingIP2", @Value = Model.CourtExecutionFSSP.GroundsEndingIP2 })
        </div>
        <label class="col-sm-12 col-form-label">Статья окончания ИП2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SatyaEndingIP2, new { @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.SatyaEndingIP2 })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата отзыва ИД с исполнения 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPExecutionDate2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPExecutionDate2.HasValue ? Model.CourtExecutionFSSP.IPExecutionDate2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Причина отзыва ИД с исполнения 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ReasonExecutionIP2, new { @readonly = "readonly", @dicId = "5", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ReasonExecutionIP2 })
        </div>
        <label class="col-sm-12 col-form-label">Дата поступления оригиналов ИД при окончании ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateReceiptOriginalIDEndIP2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateReceiptOriginalIDEndIP2.HasValue ? Model.CourtExecutionFSSP.DateReceiptOriginalIDEndIP2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label style="margin-top:20px;" class="col-sm-12 col-form-label">Дата отказа в возбуждении ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateRefusalInitiateIP2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateRefusalInitiateIP2.HasValue ? Model.CourtExecutionFSSP.DateRefusalInitiateIP2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Основание отказа в возбуждении ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.GroundsRefusalInitiateIP2, new { @readonly = "readonly", @dicId = "6", @class = "form-control DictionaryAutoCompleteGroundsRefusalInitiateIP2", @Value = Model.CourtExecutionFSSP.GroundsRefusalInitiateIP2 })
        </div>
        <label class="col-sm-12 col-form-label">Статья отказа ИП2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SatayGroundsRefusalInitiateIP2, new { @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.SatayGroundsRefusalInitiateIP2 })
        </div>
        <label class="col-sm-12 col-form-label">Дата поступления оригинала ИД при отказе в возбуждении ИП 2:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP2, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP2.HasValue ? Model.CourtExecutionFSSP.DateReceiptOriginalIDcaseRefusalInitiateIP2.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-3">
        <label class="col-sm-12 col-form-label">ФИО должника в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.FullNameDebtorIP, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.FullNameDebtorIP })
        </div>
        <label class="col-sm-12 col-form-label">Дата рождения в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IPDateBirth, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.IPDateBirth.HasValue ? Model.CourtExecutionFSSP.IPDateBirth.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">СНИЛС в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.SnilsIp, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.SnilsIp })
        </div>
        <label class="col-sm-12 col-form-label">ИНН в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.InnIp, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.InnIp })
        </div>
        <label class="col-sm-12 col-form-label">Паспорт в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.PasportIp, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.PasportIp })
        </div>
        <label class="col-sm-12 col-form-label">Адрес в ИП1:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.AddressIp, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.AddressIp })
        </div>
        <label class="col-sm-12 col-form-label">Сведения о счетах:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.AccountInformation, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.AccountInformation })
        </div>
        <label class="col-sm-12 col-form-label">Дата принятой меры приставом по счетам:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateActionTakenBailiffAccounts, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateActionTakenBailiffAccounts.HasValue ? Model.CourtExecutionFSSP.DateActionTakenBailiffAccounts.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Принятая мера приставом по счетам:</label>

            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionTakenBailiffAccounts, new { 
               @style = "", @readonly = "readonly",
               @class = "form-control DictionaryAutoComplete", @dicId = "7", @Value = Model.CourtExecutionFSSP.ActionTakenBailiffAccounts })
            </div>

    </div>
    <div class="col-md-3">
        <label class="col-sm-12 col-form-label">Сведения о недвижимости:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionTakenBailiffAccounts, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.ActionTakenBailiffAccounts })
        </div>
        <label class="col-sm-12 col-form-label">Дата принятой меры приставом по недвижимости:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateActionTakenBailiff, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateActionTakenBailiff.HasValue ? Model.CourtExecutionFSSP.DateActionTakenBailiff.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Принятая мера приставом по недвижимости:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionTakenBailiff, new { @readonly = "readonly", @dicId = "8", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ActionTakenBailiff })
        </div>
        <label class="col-sm-12 col-form-label">Сведения о ТС:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.InformationAboutVehicle, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.InformationAboutVehicle })
        </div>
        <label class="col-sm-12 col-form-label">Дата принятой меры приставом по ТС:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateActionTakenBailiffVehicle, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateActionTakenBailiffVehicle.HasValue ? Model.CourtExecutionFSSP.DateActionTakenBailiffVehicle.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Принятая мера приставом по ТС:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionTakenBailiffVehicle, new { @readonly = "readonly", @dicId = "9", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ActionTakenBailiffVehicle })
        </div>
        <label class="col-sm-12 col-form-label">Номера телефонов должника:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.PhoneNumbersDebtor, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.PhoneNumbersDebtor })
        </div>
        <label class="col-sm-12 col-form-label">Дата прочих действий пристава:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateActionsBailiff, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateActionsBailiff.HasValue ? Model.CourtExecutionFSSP.DateActionsBailiff.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Прочие действия пристава:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionsBailiff, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.ActionsBailiff })
        </div>
    </div>
    <div class="col-md-3">
        <label class="col-sm-12 col-form-label">Доход/пенсия</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.IncomePension, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.IncomePension })
        </div>
        <label class="col-sm-12 col-form-label">Дата принятой меры приставом по доходам:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateActionTakenBailiffIncome, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateActionTakenBailiffIncome.HasValue ? Model.CourtExecutionFSSP.DateActionTakenBailiffIncome.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Принятая мера приставом по доходам:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ActionTakenBailiffIncome, new { @readonly = "readonly", @dicId = "10", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ActionTakenBailiffIncome })
        </div>
        <label class="col-sm-12 col-form-label">Смена ФИО:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.NameChange, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.NameChange })
        </div>
        <label class="col-sm-12 col-form-label">Данные загс о смерти:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DeathRegistryOfficeData, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.DeathRegistryOfficeData })
        </div>
        <label class="col-sm-12 col-form-label">№ наследственного дела:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.NumberInheritanceCase, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.NumberInheritanceCase })
        </div>
        <label class="col-sm-12 col-form-label">ФИО нотариуса:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.FullNameNotary, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.FullNameNotary })
        </div>
        <label class="col-sm-12 col-form-label">Месяц проверки наследственного дела:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.MonthCheckInheritance, new
           {
               @type = "month",
               @readonly = "readonly",
               @class = "form-control",
            @Value = (Model.CourtExecutionFSSP.MonthCheckInheritance.HasValue ? Model.CourtExecutionFSSP.MonthCheckInheritance.Value.ToString("yyyy-MM") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">ФИО наследника:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.FullNameHeir, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.FullNameHeir })
        </div>
    </div>
    <div class="col-md-3">
        <label class="col-sm-12 col-form-label">Дата обращения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.MonthCheckInheritance, new
            {
           @type = "date",
           @readonly = "readonly",
           @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.MonthCheckInheritance.HasValue ? Model.CourtExecutionFSSP.MonthCheckInheritance.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Краткая суть обращения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.BriefAppeal, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.BriefAppeal })
        </div>
        <label class="col-sm-12 col-form-label">Дата подачи обращения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateApplicationSubmission, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateApplicationSubmission.HasValue ? Model.CourtExecutionFSSP.DateApplicationSubmission.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Способ подачи обращения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.ApplicationSubmissionMethod, new { @readonly = "readonly", @dicId = "17", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionFSSP.ApplicationSubmissionMethod })
        </div>
        <label class="col-sm-12 col-form-label">Дата ответа на обращение (фактическая):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.DateReasonAppealActual, new
          {
              @type = "date",
              @readonly = "readonly",
              @class = "form-control",
           @Value = (Model.CourtExecutionFSSP.DateReasonAppealActual.HasValue ? Model.CourtExecutionFSSP.DateReasonAppealActual.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Краткая суть ответа на обращение:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionFSSP.BriefSummaryResponseAppeal, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionFSSP.BriefSummaryResponseAppeal })
        </div>
        <label class="col-sm-12 col-form-label">Дополнительные сведения:</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtExecutionFSSP.AdditionalInformation, new {
           @readonly = "readonly",
           @style = "width: 300px !important; height: 70px !important;",
           @class = "form-control",
           @Value = Model.CourtExecutionFSSP.AdditionalInformation })
        </div>
    </div>
</div>

<script>
    $(document).ready(function (e) {
        //$("#CourtExecutionFSSP_SumApplicationOd").keyup(function () {
        //    let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
        //    $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        //})
        //$("#CourtExecutionInPF_SumApplicationPfPeny").keyup(function () {
        //    let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
        //    $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        //})
        //$("#CourtExecutionInPF_SumApplicationPfGp").keyup(function () {
        //    let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
        //    $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        //})
     /*   --------------------------------------*/
        $("#CourtExecutionFSSP_SumApplicationOd").keyup(function () {
            let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionFSSP_SumApplicationPeny").val() + +$("#CourtExecutionFSSP_SumApplicationGp").val();
            $("#CourtExecutionFSSP_SumApplicationAll").val(sum.toFixed(2))
        })
        $("#CourtExecutionFSSP_SumApplicationPeny").keyup(function () {
            let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionFSSP_SumApplicationPeny").val() + +$("#CourtExecutionFSSP_SumApplicationGp").val();
            $("#CourtExecutionFSSP_SumApplicationAll").val(sum.toFixed(2))
        })
        $("#CourtExecutionFSSP_SumApplicationGp").keyup(function () {
            let sum = +$("#CourtExecutionFSSP_SumApplicationOd").val() + +$("#CourtExecutionFSSP_SumApplicationPeny").val() + +$("#CourtExecutionFSSP_SumApplicationGp").val();
            $("#CourtExecutionFSSP_SumApplicationAll").val(sum.toFixed(2))
        })
        var selectDicFSSP = true;
        var valFSSP = '';
        var atrPfFSSP = '';


        $('.DictionaryAutoCompleteGroundsRefusalInitiateIP').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionFSSP_SatayGroundsRefusalInitiateIP").val(value[1]?.trim());
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })

        $('.DictionaryAutoCompleteGroundsRefusalInitiateIP2').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionFSSP_SatayGroundsRefusalInitiateIP2").val(value[1]?.trim());
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })


        $('.DictionaryAutoCompleteGroundsEndingIP2').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionFSSP_SatyaEndingIP2").val(value[1].trim());
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })

        $('.DictionaryAutoCompleteGroundsEndingIP').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionFSSP_SatyaEndingIP").val(value[1].trim());
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })

        $('.DictionaryAutoCompleteFSSP').keyup(function () {
            valFSSP = $(this).val();
            atrPfFSSP = $(this).attr("dicId");
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valFSSP + '&id=' + atrPfFSSP, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valFSSP)) {
                                selectDicFSSP = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicFSSP = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicFSSP = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionFSSP_AddressIO").val(value[1]);
                selectDicFSSP = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valFSSP = $(this).val();
                atrPfFSSP = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicFSSP == true) {
                    $(this).val("");
                    selectDicFSSP = false;
                }
            }
        })
    })
</script>