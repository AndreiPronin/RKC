@model DB.Model.Court.CourtGeneralInformation
<div class="row">
    <div class="col-md-4">
        <h2 class="">Исполнение в ПФ</h2>
    </div>
    <div class="col-md-4">
        <button type="button" class="btn btn-primary">Отчет по оплатам</button>
    </div>
    <div class="col-md-4">
        <button type="button" class="btn btn-primary">Сформировать заявление о направлении ИД в ПФ</button>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">ФИО сотрудника (направившего СП в ИО)</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.FioSendSpInIo, new { @readonly = "readonly", @dicId = "20", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionInPF.FioSendSpInIo })
        </div>
        @*<label class="col-sm-12 col-form-label">Дата передачи СП в ИО:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.DateSendSpInIo, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionInPF.DateSendSpInIo.HasValue ? Model.CourtExecutionInPF.DateSendSpInIo.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>*@
        <label class="col-sm-12 col-form-label">Исполнительный орган (ПФ, Банк):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.ExecutiveAgency, new { @readonly = "readonly", @dicId = "3", @class = "form-control DictionaryAutoCompletePf", @Value = Model.CourtExecutionInPF.ExecutiveAgency })
        </div>
        <label class="col-sm-12 col-form-label">Адрес ИО:</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtExecutionInPF.AdresIo, new {@style = "width: 300px !important; height: 50px !important;", @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionInPF.AdresIo })
        </div>
        <label class="col-sm-12 col-form-label">Дата отправки заявления+ИД в ПФ о взыскании:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.DateSendApplicationIdInPf, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionInPF.DateSendApplicationIdInPf.HasValue ? Model.CourtExecutionInPF.DateSendApplicationIdInPf.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Способ отправки оригиналов заявления+ИД в ПФ:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.WaySendOriginalApplicationIdInPf, new { @readonly = "readonly", @dicId = "17", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionInPF.WaySendOriginalApplicationIdInPf })
        </div>
    </div>
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ПФ - всего</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.SumApplicationPfAll, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionInPF.SumApplicationPfAll })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ПФ - ОД:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.SumApplicationPfOd, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionInPF.SumApplicationPfOd })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ПФ - пени:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.SumApplicationPfPeny, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionInPF.SumApplicationPfPeny })
        </div>
        <label class="col-sm-12 col-form-label">Сумма по заявлению в ПФ - ГП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.SumApplicationPfGp, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionInPF.SumApplicationPfGp })
        </div>
        <label class="col-sm-12 col-form-label">Дата получения к исполнению ПФ:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.DateReturnPF, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionInPF.DateReturnPF.HasValue ? Model.CourtExecutionInPF.DateReturnPF.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Срок нахождения на исполнени (дн.):</label>
        <div class="col-sm-8">
            @{ Model.CourtExecutionInPF.LengthStayDay = (DateTime.Now - (Model.CourtExecutionInPF.DateReturnPF.HasValue ?
                      Model.CourtExecutionInPF.DateReturnPF.Value : DateTime.Now)).Days; }
            @Html.TextBoxFor(m => m.CourtExecutionInPF.LengthStayDay, new { @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionInPF.LengthStayDay })
        </div>
    </div>
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Дата возврата ИД из ПФ</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.DateReturnIdPF, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionInPF.DateReturnIdPF.HasValue ? Model.CourtExecutionInPF.DateReturnIdPF.Value.ToString("yyyy-MM-dd") : string.Empty)
       })
        </div>
        <label class="col-sm-12 col-form-label">Дата отзыва ИД:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.DateReturnId, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtExecutionInPF.DateReturnId.HasValue ? Model.CourtExecutionInPF.DateReturnId.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Причина отзыва/возврата ИД из ПФ:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.ReasonReturnIdPf, new { @readonly = "readonly", @dicId = "14", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtExecutionInPF.ReasonReturnIdPf })
        </div>
        <label class="col-sm-12 col-form-label">Исх. № письма от ПФ о возврате ИД:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.NumberMailPfReturnId, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionInPF.NumberMailPfReturnId })
        </div>
        <label class="col-sm-12 col-form-label">Сумма исполнения от ПФ:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtExecutionInPF.SumExecutionPf, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtExecutionInPF.SumExecutionPf })
        </div>
        <label class="col-sm-12 col-form-label">Примечание:</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtExecutionInPF.Comment, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtExecutionInPF.Comment })
        </div>
    </div>
</div>
<script>
    $(document).ready(function (e) {
        $("#CourtExecutionInPF_SumApplicationPfOd").keyup(function () {
            let sum = +$("#CourtExecutionInPF_SumApplicationPfOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
            $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        })
        $("#CourtExecutionInPF_SumApplicationPfPeny").keyup(function () {
            let sum = +$("#CourtExecutionInPF_SumApplicationPfOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
            $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        })
        $("#CourtExecutionInPF_SumApplicationPfGp").keyup(function () {
            let sum = +$("#CourtExecutionInPF_SumApplicationPfOd").val() + +$("#CourtExecutionInPF_SumApplicationPfPeny").val() + +$("#CourtExecutionInPF_SumApplicationPfGp").val();
            $("#CourtExecutionInPF_SumApplicationPfAll").val(sum.toFixed(2))
        })
        var selectDicPf = true;
        var valPf = '';
        var atrPf = '';

        $('.DictionaryAutoCompletePf').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtExecutionInPF_AdresIo").val(value[1]);
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })
    })
</script>

