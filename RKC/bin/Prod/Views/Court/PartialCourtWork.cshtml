@model DB.Model.Court.CourtGeneralInformation
<h2 class="">Судебная работа</h2>
<div class="row">
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Сумма задолженности на текущую дату:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumDebtNowDate, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumDebtNowDate })

        </div>
        <label class="col-sm-12 col-form-label">Сумма задолженности, переданная в суд - всего:</label>
        <div class="col-sm-8">
            @{var resRequisitesSumDebtSendCourt = Model.CourtWork.SumOdSendCourt + Model.CourtWork.SumGP + Model.CourtWork.SumPenySendCourt; }
            <input class="form-control" id="RequisitesSumDebtSendCourt" disabled="disabled" value="@resRequisitesSumDebtSendCourt" />

        </div>
        <label class="col-sm-12 col-form-label">Сумма ОД, предъявленная в суд:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumOdSendCourt, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumOdSendCourt })
        </div>
        <label class="col-sm-12 col-form-label">Сумма пени, предъявленная в суд:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumPenySendCourt, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumPenySendCourt, })
        </div>
        <label class="col-sm-12 col-form-label">Сумма ГП (указанная в судебном приказе):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumGP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumGP ?? 0.0 })
        </div>
        <label class="col-sm-12 col-form-label">Период задолженности начальный:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.PeriodDebtBegin, new
            {
                @type = "month",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtWork.PeriodDebtBegin.HasValue ? Model.CourtWork.PeriodDebtBegin.Value.ToString("yyyy-MM") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Период задолженности конечный:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.PeriodDebtEnd, "{0:MM-yyyy}", new
            {
                @type = "month",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtWork.PeriodDebtEnd.HasValue ? Model.CourtWork.PeriodDebtEnd.Value.ToString("yyyy-MM") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">ФИО сотрудника (направившего дело в суд):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.FioSendCourt, new { @readonly = "readonly", @dicId = "20", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtWork.FioSendCourt })
        </div>
        <label class="col-sm-12 col-form-label">Дата задания:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateTask, new
            {
                @type = "month",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtWork.DateTask.HasValue ? Model.CourtWork.DateTask.Value.ToString("yyyy-MM") : string.Empty)
            })
        </div>
        <label class="col-sm-12 col-form-label">Способ отправки заявления в суд:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SubmitApplicationCourt, new { @readonly = "readonly", @dicId = "17", @class = "form-control DictionaryAutoComplete", @Value = Model.CourtWork.SubmitApplicationCourt })
        </div>
        <label class="col-sm-12 col-form-label">Наименование суда:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.NameCourt, new { @readonly = "readonly", @dicId = "1", @class = "form-control DictionaryAutoCompleteCourtWorkNameCourt", @Value = Model.CourtWork.NameCourt })
        </div>
        <label class="col-sm-12 col-form-label">Адрес суда:</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtWork.AddressCourt, new { @style = "width: 300px !important; height: 50px !important;", @disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.AddressCourt })
        </div>
        <label class="col-sm-12 col-form-label">Дата принятия заявления судом:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateReceptionCourt, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtWork.DateReceptionCourt.HasValue ? Model.CourtWork.DateReceptionCourt.Value.ToString("yyyy-MM-dd") : string.Empty)
            })
        </div>
    </div>
    <div class="col-md-4">
        <label class="col-sm-12 col-form-label">Дата Определения о возврате заявления на выдачу СП</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateReturnCourtSP, new { @type = "Date", @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.DateReturnCourtSP })
        </div>
        <label class="col-sm-12 col-form-label">Причина возврата заявления:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.ReasonReturningApplication, new
            {
                @readonly = "readonly",
                @dicId = "2",
                @class = "form-control DictionaryAutoComplete",
           @Value = Model.CourtWork.ReasonReturningApplication
            })
        </div>
        <label class="col-sm-12 col-form-label">№ СП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.NumberSP, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.NumberSP })
        </div>
        <label class="col-sm-12 col-sm-12 col-form-label">Дата СП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateSP, new
           {
               @type = "Date",
               @readonly = "readonly",
               @class = "form-control",
               @Value = (Model.CourtWork.DateSP.HasValue ? Model.CourtWork.DateSP.Value.ToString("yyyy-MM-dd") : string.Empty)
           })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты - всего (добровольно):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumPayAll, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumPayAll })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты ОД (добровольно):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumPayOD, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumPayOD })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты пени (добровольно):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumPayPeny, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumPayPeny })
        </div>
        <label class="col-sm-12 col-form-label">Сумма оплаты ГП (добровольно):</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.SumPayGP, new { @readonly = "readonly", @type = "number", @step = "0.01", @class = "form-control", @Value = Model.CourtWork.SumPayGP })
        </div>
        <label class="col-sm-12 col-form-label">Примечание:</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.CourtWork.Comment, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.Comment })
        </div>
    </div>
    <div class="col-md-4">
        <div class="col-md-6">
            <button class="btn-primary">Отчет по оплатам</button>
        </div>
        <div class="col-md-6">
            <button class="btn-primary"> Сформировать заявление о выдаче СП </button>
        </div>
        <label class="col-sm-12 col-form-label">Сумма излишне уплаченной ГП:</label>
        <div class="col-sm-8">
            @*@{var resRequisitesSumGPPlusSumPayGP = Model.CourtWork.RequisitesSumGP - Model.CourtWork.SumGP; }*@
            <input class="form-control" id="CourtWork_AmountOverpaidGP" name="CourtWork.AmountOverpaidGP" disabled="disabled" value="" />
        </div>
        <label class="col-sm-12 col-form-label">Сумма уплаченной ГП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.RequisitesSumGP, new {@disabled = "disabled", @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.RequisitesSumGP })
        </div>
        <label style="padding-top: 25px;" class="col-sm-12 col-form-label"> <button type="button" id="AddCourtWorkRequisites" class="btn btn-primary hidden">Добавить реквизиты ГП</button></label>
        <div id="PartialViewCourtWorkRequisites">
            @Html.Partial("PartialViewCourtWorkRequisites", Model.CourtWorkRequisites)
        </div>
        <label class="col-sm-12 col-form-label">Дата определения на возврат излишне уплаченной ГП:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateReturnCourtSP, new
            {
                @type = "Date",
                @readonly = "readonly",
                @class = "form-control",
           @Value = (Model.CourtWork.DateReturnCourtSP.HasValue ? Model.CourtWork.DateReturnCourtSP.Value.ToString("yyyy-MM-dd") : string.Empty)
       })
        </div>
        <label class="col-sm-12 col-form-label">Дата передачи реестра СП в бухгалтерию:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.DateReturnCourtSP, new { @type = "Date", @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.DateReturnCourtSP })
        </div>


        @*<label class="col-sm-12 col-form-label">Реквизиты ГП: дата платежного поручения:</label>
         <div class="col-sm-8">
             @Html.TextBoxFor(m => m.CourtWork.RequisitesDateGP, new
             {
                 @type = "Date",
                 @readonly = "readonly",
                 @class = "form-control",
            @Value = (Model.CourtWork.RequisitesDateGP.HasValue ? Model.CourtWork.RequisitesDateGP.Value.ToString("yyyy-MM-dd") : string.Empty)
        })
         </div>*@
        @*<label class="col-sm-12 col-form-label">Реквизиты ГП: номер платежного поручения:</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.CourtWork.RequisitesNumberGP, new { @readonly = "readonly", @class = "form-control", @Value = Model.CourtWork.RequisitesNumberGP })
        </div>*@
    </div>
</div>
<script>
    function func(e) {
        if (e.value.indexOf(".") != '-1') {
            e.value = e.value.substring(0, e.value.indexOf(".") + 3); // цифра 4, устанавливает количество цифр после запятой,
            e.value = e.value.toString().replace(",", ".");
            //т.е. если 4, то максимум 3 цифры после запятой
            console.log(e.value.toString().replace(",", "."));
        }
    }
    $(document).ready(function (e) {

        $("#CourtWork_RequisitesSumGP").val($("#sumaRequsitsGp").val());
        let summCourtWork = +$("#CourtWork_RequisitesSumGP").val() - $("#CourtWork_SumGP").val();
        $("#CourtWork_AmountOverpaidGP").val(summCourtWork.toFixed(2));
        $("#CourtWork_SumGP").keyup(function () {
            $("#CourtWork_RequisitesSumGP").val($("#sumaRequsitsGp").val());
            let sum = $("#CourtWork_RequisitesSumGP").val() - $("#CourtWork_SumGP").val();
            $("#CourtWork_AmountOverpaidGP").val(sum)
            $("#Save").removeClass("hidden");
            removeErrorText($("#CourtWork_AmountOverpaidGP"));
            removeError($("#CourtWork_RequisitesSumGP"));
            removeError($("#CourtWork_SumGP"));
            if (sum < 0) {
                $("#Save").addClass("hidden");
                callErrorText($("#CourtWork_AmountOverpaidGP"), "Проверьте введенные суммы ГП");
                callError($("#CourtWork_RequisitesSumGP"));
                callError($("#CourtWork_SumGP"))
            }
        })
        //$("#CourtWork_RequisitesSumGP").keyup(function () {
        //    let sum = $("#CourtWork_RequisitesSumGP").val() - $("#CourtWork_SumGP").val();
        //    $("#CourtWork_AmountOverpaidGP").val(sum)
        //    $("#Save").removeClass("hidden");
        //    removeError($("#CourtWork_RequisitesSumGP"));
        //    removeError($("#CourtWork_SumGP"));
        //    removeErrorText($("#CourtWork_AmountOverpaidGP"));
        //    if (sum < 0) {
        //        $("#Save").addClass("hidden");
        //        callErrorText($("#CourtWork_AmountOverpaidGP"), "Проверьте введенные суммы ГП");
        //        callError($("#CourtWork_RequisitesSumGP"));
        //        callError($("#CourtWork_SumGP"));
        //    }
        //})
        $("#CourtWork_SumOdSendCourt").keyup(function () {
            let sum = +$("#CourtWork_SumOdSendCourt").val() + +$("#CourtWork_SumPenySendCourt").val() + +$("#CourtWork_SumGP").val();
            $("#RequisitesSumDebtSendCourt").val(sum.toFixed(2))
        })
        $("#CourtWork_SumPenySendCourt").keyup(function () {
            let sum = +$("#CourtWork_SumOdSendCourt").val() + +$("#CourtWork_SumPenySendCourt").val() + +$("#CourtWork_SumGP").val();
            $("#RequisitesSumDebtSendCourt").val(sum.toFixed(2))
        })
        $("#CourtWork_SumGP").keyup(function () {
            let sum = +$("#CourtWork_SumOdSendCourt").val() + +$("#CourtWork_SumPenySendCourt").val() + +$("#CourtWork_SumGP").val();
            $("#RequisitesSumDebtSendCourt").val(sum.toFixed(2))
        })
        $("#AddCourtWorkRequisites").click(function (e) {
            var Date = "@DateTime.Now.Date.AddMonths(-1).ToString("yyyy-MM")";
            var DateMax = "@DateTime.Now.AddMonths(-1).ToString("yyyy-MM")";
            console.log(DateMax);
            $.confirm({
                title: 'Введите реквизиты ГП',
                content: '' +
                    '<form action="" class="formName">' +
                    '<div class="col-md-4">' +
                    '<label>Дата</label>' +
                    '<input type="Date" id="DateCourtWordRequisites" class="form-control" />' +
                    '</div>' +
                    '<div class="col-md-4">' +
                    '<label>Номер</label>' +
                    '<input type="number" id="NumberCourtWordRequisites" class="form-control" />' +
                    '</div>' +
                    '<div class="col-md-4">' +
                    '<label>Сумма</label>' +
                    '<input type="number" id="SumCourtWordRequisites" oninput="func(this)" class="form-control" />' +
                    '</div>' +
                    '</form>',
                buttons: {
                    '<input type="button" class="btn btn-primary" value="Сохранить" data-toggle="modal" data-target="#ShowLogResultModal" />': function () {
                        var summa = $("#SumCourtWordRequisites").val();
                        summa = summa.replace(",", ".")
                        $.ajax({
                            url: '/Court/AddCourtWorkRequisites',
                            type: 'Post',
                            async: false,
                            data: JSON.stringify({
                                courtWorkRequisites: {
                                    CourtGeneralInformId:@Model.Id,
                                    Date: $("#DateCourtWordRequisites").val(),
                                    Number: $("#NumberCourtWordRequisites").val(),
                                    Suma: summa,
                                }
                            }),
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                UpdateCourtWordRequisites();
                            },
                            error: function () {
                                alert("Что то пошло не так. Обратитесь к администратору");
                            }
                        });
                    },
                    "Отмена": function () {

                    }
                }
            })

        });

        $('.DictionaryAutoCompleteCourtWorkNameCourt').keyup(function () {
            valPf = $(this).val();
            atrPf = $(this).attr("dicId");
            console.log(selectDicPf);
            return;
        }).autocomplete({
            delay: 500,
            source: function (request, response) {
                $.ajax({
                    url: "/Court/AutocompleteDictionary?Text=" + valPf + '&id=' + atrPf, type: "Get", dataType: "json",
                    data: { id: request.term },

                    success: function (data) {
                        if (data.length == 1) {
                            if (String(data[0]).includes(valPf)) {
                                selectDicPf = false;
                                response($.map(data, function (item) {
                                    return { label: item, value: item };
                                }));
                            }
                        }
                        if (data.length > 1) {
                            response($.map(data, function (item) {
                                selectDicPf = true;
                                return { label: item, value: item };
                            }));
                        } else if (data.length == 0) {
                            selectDicPf = true;
                            response([{ label: 'Не найдено.', val: -1 }]);
                        }

                    },
                });
            },
            minLength: 0,
            select: function (event, ui) {
                var value = ui.item.value.split("|");
                ui.item.value = value[0];
                $("#CourtWork_AddressCourt").val(value[1]);
                selectDicPf = false;
            }
        }).focus(function () {
            if ($(this).attr("readonly") == undefined) {
                console.log($(this).attr("dicId"));
                valPf = $(this).val();
                atrPf = $(this).attr("dicId");
                $(this).autocomplete("search");
            }
        }).focusout(function (e) {
            if ($(this).attr("readonly") == undefined) {
                if (selectDicPf == true) {
                    $(this).val("");
                    selectDicPf = false;
                }
            }
        })
    })
</script>

